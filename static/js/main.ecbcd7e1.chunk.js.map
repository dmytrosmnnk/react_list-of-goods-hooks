{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","useState","filter","setFilter","reverse","setReverse","preparedGoods","map","good","index","id","name","sort","g1","g2","localeCompare","length","className","type","onClick","goodsFromServer","App","showButton","setShowButton","showGoods","setShowGoods","ReactDOM","render","document","getElementById"],"mappings":"+NAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,EAA4BC,mBAAiB,MAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAkB,GAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAgBN,EAAMO,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAChDC,GAAID,EACJE,KAAMH,MAuBR,OApBAF,EAAcM,MAAK,SAACC,EAAIC,GACtB,OAAQZ,GACN,IAAK,KACH,OAAQW,EAAGH,GAAKI,EAAGJ,GAErB,IAAK,KACH,OAAQG,EAAGF,KAAKI,cAAcD,EAAGH,MAEnC,IAAK,SACH,OAAQE,EAAGF,KAAKK,OAASF,EAAGH,KAAKK,OAEnC,QACE,OAAO,MAITZ,GACFE,EAAcF,UAId,sBAAKa,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPhB,EAAU,MACVE,GAAW,IALf,iCAUA,wBACEa,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPhB,EAAU,UACVE,GAAW,IALf,4BAUA,wBACEa,KAAK,SACLD,UAAU,qBACVE,QAAS,WACPd,GAAW,IAJf,oBASA,wBACEa,KAAK,SACLD,UAAU,uBACVE,QAAS,WACPhB,EAAU,MACVE,GAAW,IALf,sBAYF,sBAAKY,UAAU,gBAAf,UACE,uCADF,0BAEsBX,EAAcU,WAGpC,qBAAKC,UAAU,cAAf,SACE,6BACGX,EAAcC,KAAI,SAACC,GAAD,OACjB,6BAAqBA,EAAKG,MAAjBH,EAAKG,iBCpFpBS,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2BaC,EAxBO,WACpB,MAAoCpB,oBAAkB,GAAtD,mBAAOqB,EAAP,KAAmBC,EAAnB,KACA,EAAkCtB,oBAAkB,GAApD,mBAAOuB,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKR,UAAU,MAAf,UACGK,GACC,wBACEJ,KAAK,SACLD,UAAU,iCACVE,QAAS,WACPI,GAAc,GACdE,GAAa,IALjB,mBAYDD,GAAa,cAAC,EAAD,CAAWxB,MAAOoB,QCjCtCM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.ecbcd7e1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './GoodsList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  const [filter, setFilter] = useState<string>('id');\n  const [reverse, setReverse] = useState<boolean>(false);\n\n  const preparedGoods = goods.map((good, index) => ({\n    id: index,\n    name: good,\n  }));\n\n  preparedGoods.sort((g1, g2) => {\n    switch (filter) {\n      case 'id':\n        return (g1.id - g2.id);\n\n      case 'az':\n        return (g1.name.localeCompare(g2.name));\n\n      case 'length':\n        return (g1.name.length - g2.name.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return (\n    <div className=\"Goods\">\n      <div className=\"Goods__buttons\">\n        <button\n          type=\"button\"\n          className=\"button button-blue\"\n          onClick={() => {\n            setFilter('az');\n            setReverse(false);\n          }}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          className=\"button button-blue\"\n          onClick={() => {\n            setFilter('length');\n            setReverse(false);\n          }}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className=\"button button-blue\"\n          onClick={() => {\n            setReverse(true);\n          }}\n        >\n          Revers\n        </button>\n        <button\n          type=\"button\"\n          className=\"button button-orange\"\n          onClick={() => {\n            setFilter('id');\n            setReverse(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <div className=\"Goods__header\">\n        <h1>Goods</h1>\n        {`Goods quantity: ${preparedGoods.length}`}\n      </div>\n\n      <div className=\"Goods__list\">\n        <ul>\n          {preparedGoods.map((good) => (\n            <li key={good.name}>{good.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [showButton, setShowButton] = useState<boolean>(true);\n  const [showGoods, setShowGoods] = useState<boolean>(false);\n\n  return (\n    <div className=\"App\">\n      {showButton && (\n        <button\n          type=\"button\"\n          className=\"button button-blue App__button\"\n          onClick={() => {\n            setShowButton(false);\n            setShowGoods(true);\n          }}\n        >\n          Start\n        </button>\n      )}\n\n      {showGoods && <GoodsList goods={goodsFromServer} />}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}